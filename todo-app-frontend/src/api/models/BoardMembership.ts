/* tslint:disable */
/* eslint-disable */
/**
 * Todo App API
 * API for managing users and their todos. Now with WebSockets!
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Role } from './Role';
import {
    RoleFromJSON,
    RoleFromJSONTyped,
    RoleToJSON,
    RoleToJSONTyped,
} from './Role';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface BoardMembership
 */
export interface BoardMembership {
    /**
     * 
     * @type {number}
     * @memberof BoardMembership
     */
    userId: number;
    /**
     * 
     * @type {number}
     * @memberof BoardMembership
     */
    boardId: number;
    /**
     * 
     * @type {Role}
     * @memberof BoardMembership
     */
    role: Role;
    /**
     * 
     * @type {string}
     * @memberof BoardMembership
     */
    color?: string | null;
    /**
     * 
     * @type {number}
     * @memberof BoardMembership
     */
    id: number;
    /**
     * 
     * @type {User}
     * @memberof BoardMembership
     */
    user: User;
}



/**
 * Check if a given object implements the BoardMembership interface.
 */
export function instanceOfBoardMembership(value: object): value is BoardMembership {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('boardId' in value) || value['boardId'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function BoardMembershipFromJSON(json: any): BoardMembership {
    return BoardMembershipFromJSONTyped(json, false);
}

export function BoardMembershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): BoardMembership {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'boardId': json['board_id'],
        'role': RoleFromJSON(json['role']),
        'color': json['color'] == null ? undefined : json['color'],
        'id': json['id'],
        'user': UserFromJSON(json['user']),
    };
}

export function BoardMembershipToJSON(json: any): BoardMembership {
    return BoardMembershipToJSONTyped(json, false);
}

export function BoardMembershipToJSONTyped(value?: BoardMembership | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'board_id': value['boardId'],
        'role': RoleToJSON(value['role']),
        'color': value['color'],
        'id': value['id'],
        'user': UserToJSON(value['user']),
    };
}

