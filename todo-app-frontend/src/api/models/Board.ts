/* tslint:disable */
/* eslint-disable */
/**
 * Todo App API
 * API for managing users and their todos. Now with WebSockets!
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface Board
 */
export interface Board {
    /**
     * 
     * @type {string}
     * @memberof Board
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Board
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Board
     */
    ownerId: number;
    /**
     * 
     * @type {User}
     * @memberof Board
     */
    owner?: User | null;
}

/**
 * Check if a given object implements the Board interface.
 */
export function instanceOfBoard(value: object): value is Board {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    return true;
}

export function BoardFromJSON(json: any): Board {
    return BoardFromJSONTyped(json, false);
}

export function BoardFromJSONTyped(json: any, ignoreDiscriminator: boolean): Board {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'ownerId': json['owner_id'],
        'owner': json['owner'] == null ? undefined : UserFromJSON(json['owner']),
    };
}

export function BoardToJSON(json: any): Board {
    return BoardToJSONTyped(json, false);
}

export function BoardToJSONTyped(value?: Board | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'id': value['id'],
        'owner_id': value['ownerId'],
        'owner': UserToJSON(value['owner']),
    };
}

